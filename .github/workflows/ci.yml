# GitHub Actions workflow: CI for cargo-msrv
#
# based on: https://github.com/BurntSushi/bstr/blob/master/.github/workflows/ci.yml
# which is licensed under Apache License, Version 2.0 or MIT license

name: "Continuous Integration"
on:
  pull_request:
  push:
    branches:
      - master
      - main
      - staging # for Bors
      - trying # for Bors
  schedule:
    - cron: '00 04 * * *'
jobs:
  test:
    name: test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        build: [msrv, stable, beta, nightly, macos, win-gnu, win-msvc]
        include:
          # pinned (MSRV) rust version :: ubuntu
          - build: msrv
            os: ubuntu-18.04
            rust: 1.53.0

          # latest rust stable :: ubuntu
          - build: stable
            os: ubuntu-latest
            rust: stable

          # latest rust beta :: ubuntu
          - build: beta
            os: ubuntu-latest
            rust: beta

          # latest rust nightly :: ubuntu
          - build: nightly
            os: ubuntu-latest
            rust: nightly

          # latest rust stable :: mac_os
          - build: macos
            os: macOS-latest
            rust: stable

          # latest rust stable :: windows + gnu
          - build: win-gnu
            os: windows-latest
            rust: stable-x86_64-gnu

          # latest rust stable :: windows + msvc
          - build: win-msvc
            os: windows-latest
            rust: stable


    steps:
      # checkout
      - name: checkout_repository
        uses: actions/checkout@v2.4.0

      # install: rust
      - name: install_rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
          profile: minimal

      # build / doc / test
      - name: build_all
        run: cargo build --verbose --all

      - name: test_all
        run: cargo test --verbose --all -- --test-threads=1

  rustfmt:
    name: rustfmt
    runs-on: ubuntu-18.04
    steps:
      - name: checkout_repository
        uses: actions/checkout@v2.4.0
        with:
          fetch-depth: 1
      - name: install_rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          profile: minimal
      - name: install_rustfmt
        run: rustup component add rustfmt
      - name: check_formatting
        run: |
          cargo fmt -- --check

  clippy:
    name: clippy
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: checkout_repo
        uses: actions/checkout@v2.4.0
      - name: install_rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal
          components: clippy
      - name: check_clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features --all-targets --workspace

  cargo_deny:
    name: cargo_deny
    runs-on: ubuntu-latest
    strategy:
      matrix:
        checks:
          - advisories
          - bans licenses sources

    continue-on-error: ${{ matrix.checks == 'advisories' }}
    steps:
      - uses: actions/checkout@v2.4.0
      - uses: EmbarkStudios/cargo-deny-action@v1

  msrv:
    name: msrv
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: checkout_repo
        uses: actions/checkout@v2.4.0
      - name: install_rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal
      - name: install_jq
        run: sudo apt install jq
      - name: install_cargo_msrv
        run: cargo install cargo-msrv
      - name: install_jsonlines
        run: cargo install jsonlines
      - name: version_of_cargo_msrv
        run: cargo msrv --version # as of writing: 0.7.0 (required for --verify)
      - name: run_cargo_msrv
        run: cargo msrv --verify --output-format json | jsonlines-tail | jq --exit-status .success
